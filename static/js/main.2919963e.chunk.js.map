{"version":3,"sources":["Graph.js","InputForm.js","App.js","reportWebVitals.js","index.js"],"names":["Graph","data","labels","datasets","backgroundColor","label","options","InputForm","props","input","state","accountname","score","doChange","bind","doSubmit","event","this","target","value","setState","preventDefault","className","onSubmit","type","onChange","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOA+OeA,MA3Of,WAmOE,OACE,8BAEI,cAAC,IAAD,CAAKC,KApOO,CAChBC,OAAQ,CAmCN,CAAC,KACD,CAAC,OACD,CAAC,OACD,CAAC,OACD,CAAC,OACD,CAAC,OACD,CAAC,OACD,CAAC,OACD,CAAC,OACD,CAAC,OACD,CAAC,QACD,CAAC,QACD,CAAC,QACD,CAAC,QACD,CAAC,QACD,CAAC,QACD,CAAC,QACD,CAAC,QACD,CAAC,QACD,CAAC,QACD,CAAC,QACD,CAAC,QACD,CAAC,QACD,CAAC,QACD,CAAC,QACD,CAAC,QACD,CAAC,QACD,CAAC,QACD,CAAC,QACD,CAAC,SAEHC,SAAU,CAER,CACEF,KAAM,CACF,IACA,IACA,IACA,IACA,GACA,GACA,IACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEJG,gBAAiB,CAEb,2BACA,2BACA,2BACA,2BAEA,wBACA,wBACA,sBACA,wBAEA,uBACA,uBACA,uBACA,uBAEA,yBACA,yBACA,yBACA,yBAEA,uBACA,uBACA,uBACA,uBAEA,yBACA,yBACA,yBACA,yBAEA,yBACA,yBACA,yBACA,yBAEA,uBACA,wBA6CJC,MAAO,MA2CeC,QArCR,Q,oCCtJPC,G,yDAvCX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAHVC,MAAQ,GAIJ,EAAKC,MAAQ,CACTC,YAAa,QACbC,MAAO,OAEX,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAPF,E,4CAUlB,SAASE,GACLC,KAAKR,MAAQO,EAAME,OAAOC,Q,sBAG9B,SAASH,GACLC,KAAKG,SAAS,CACVT,YAAaM,KAAKR,QAEtBO,EAAMK,mB,oBAGV,WACI,OACI,sBAAKC,UAAU,OAAf,UACI,uBAAMC,SAAUN,KAAKF,SAArB,UACI,sBAAKO,UAAU,aAAf,UACI,iDACA,uBAAOE,KAAK,OAAOF,UAAU,eAAeG,SAAUR,KAAKJ,cAE/D,uBAAOW,KAAK,SAASF,UAAU,kBAAkBH,MAAM,aAE3D,oBAAIG,UAAU,2BAAd,SACI,8BAAIL,KAAKP,MAAMC,YAAf,iBAA0CM,KAAKP,MAAME,MAArD,gB,GApCIc,cCiBTC,MAhBf,WACE,OACE,sBAAKL,UAAU,MAAf,UACE,oBAAIA,UAAU,kCAAd,0CACA,sBAAKA,UAAU,iBAAf,UACE,uCACA,yIAA0C,uBAA1C,wNAGA,cAAC,EAAD,IACA,cAAC,EAAD,WCHOM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2919963e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport './App.css';\r\n\r\nfunction Graph () {\r\n    /** グラフデータ */\r\n  const graphData = {\r\n    labels: [\r\n      // 軸ラベル\r\n      // 各ラベルを配列にすることで軸ラベルが改行されて表示される\r\n      /*\r\n      ['0-', '99'],\r\n      ['100-', '199'],\r\n      ['200-', '299'],\r\n      ['300-', '399'],\r\n      ['400-', '499'],\r\n      ['500-', '599'],\r\n      ['600-', '699'],\r\n      ['700-', '799'],\r\n      ['800-', '899'],\r\n      ['900-', '999'],\r\n      ['1000-', '1099'],\r\n      ['1100-', '1199'],\r\n      ['1200-', '1299'],\r\n      ['1300-', '1399'],\r\n      ['1400-', '1499'],\r\n      ['1500-', '1599'],\r\n      ['1600-', '1699'],\r\n      ['1700-', '1799'],\r\n      ['1800-', '1899'],\r\n      ['1900-', '1999'],\r\n      ['2000-', '2099'],\r\n      ['2100-', '2199'],\r\n      ['2200-', '2299'],\r\n      ['2300-', '2399'],\r\n      ['2400-', '2499'],\r\n      ['2500-', '2599'],\r\n      ['2600-', '2699'],\r\n      ['2700-', '2799'],\r\n      ['2800-', '2899'],\r\n      ['2900-', '2999'],\r\n      */\r\n      ['0'],\r\n      ['100'],\r\n      ['200'],\r\n      ['300'],\r\n      ['400'],\r\n      ['500'],\r\n      ['600'],\r\n      ['700'],\r\n      ['800'],\r\n      ['900'],\r\n      ['1000'],\r\n      ['1100'],\r\n      ['1200'],\r\n      ['1300'],\r\n      ['1400'],\r\n      ['1500'],\r\n      ['1600'],\r\n      ['1700'],\r\n      ['1800'],\r\n      ['1900'],\r\n      ['2000'],\r\n      ['2100'],\r\n      ['2200'],\r\n      ['2300'],\r\n      ['2400'],\r\n      ['2500'],\r\n      ['2600'],\r\n      ['2700'],\r\n      ['2800'],\r\n      ['2900'],\r\n    ],\r\n    datasets: [\r\n      // 表示するデータセット\r\n      {\r\n        data: [\r\n            421,\r\n            293,\r\n            194,\r\n            138,\r\n            99,\r\n            86,\r\n            106,\r\n            87,\r\n            79,\r\n            84,\r\n            57,\r\n            64,\r\n            37,\r\n            49,\r\n            26,\r\n            14,\r\n            14,\r\n            7,\r\n            9,\r\n            9,\r\n            7,\r\n            5,\r\n            4,\r\n            0,\r\n            2,\r\n            1,\r\n            0,\r\n            1,\r\n            0,\r\n            0,\r\n        ],\r\n        backgroundColor: [\r\n            //gray\r\n            'rgba(130, 130, 130, 0.5)',\r\n            'rgba(130, 130, 130, 0.5)',\r\n            'rgba(130, 130, 130, 0.5)',\r\n            'rgba(130, 130, 130, 0.5)',\r\n            //brown\r\n            'rgba(136, 41, 1, 0.5)',\r\n            'rgba(136, 41, 1, 0.5)',\r\n            'rgba(136, 41, 1, 1)',\r\n            'rgba(136, 41, 1, 0.5)',\r\n            //green\r\n            'rgba(0, 137, 0, 0.5)',\r\n            'rgba(0, 137, 0, 0.5)',\r\n            'rgba(0, 137, 0, 0.5)',\r\n            'rgba(0, 137, 0, 0.5)',\r\n            //cyan\r\n            'rgba(0, 198, 182, 0.5)',\r\n            'rgba(0, 198, 182, 0.5)',\r\n            'rgba(0, 198, 182, 0.5)',\r\n            'rgba(0, 198, 182, 0.5)',\r\n            //blue\r\n            'rgba(0, 0, 137, 0.5)',\r\n            'rgba(0, 0, 137, 0.5)',\r\n            'rgba(0, 0, 137, 0.5)',\r\n            'rgba(0, 0, 137, 0.5)',\r\n            //yellow\r\n            'rgba(252, 248, 7, 0.5)',\r\n            'rgba(252, 248, 7, 0.5)',\r\n            'rgba(252, 248, 7, 0.5)',\r\n            'rgba(252, 248, 7, 0.5)',\r\n            //orange\r\n            'rgba(252, 125, 7, 0.5)',\r\n            'rgba(252, 125, 7, 0.5)',\r\n            'rgba(252, 125, 7, 0.5)',\r\n            'rgba(252, 125, 7, 0.5)',\r\n            //red\r\n            'rgba(252, 7, 7, 0.5)',\r\n            'rgba(252, 7, 7, 0.5)',\r\n        ],\r\n        /*\r\n        backgroundColor: [\r\n            //gray\r\n            'rgba(130, 130, 130, 1)',\r\n            'rgba(130, 130, 130, 1)',\r\n            'rgba(130, 130, 130, 1)',\r\n            'rgba(130, 130, 130, 1)',\r\n            //brown\r\n            'rgba(136, 41, 1, 0.5)',\r\n            'rgba(136, 41, 1, 0.5)',\r\n            'rgba(136, 41, 1, 1)',\r\n            'rgba(136, 41, 1, 0.5)',\r\n            //green\r\n            'rgba(0, 137, 0, 1)',\r\n            'rgba(0, 137, 0, 1)',\r\n            'rgba(0, 137, 0, 1)',\r\n            'rgba(0, 137, 0, 1)',\r\n            //cyan\r\n            'rgba(0, 198, 182, 1)',\r\n            'rgba(0, 198, 182, 1)',\r\n            'rgba(0, 198, 182, 1)',\r\n            'rgba(0, 198, 182, 1)',\r\n            //blue\r\n            'rgba(0, 0, 137, 1)',\r\n            'rgba(0, 0, 137, 1)',\r\n            'rgba(0, 0, 137, 1)',\r\n            'rgba(0, 0, 137, 1)',\r\n            //yellow\r\n            'rgba(252, 248, 7, 1)',\r\n            'rgba(252, 248, 7, 1)',\r\n            'rgba(252, 248, 7, 1)',\r\n            'rgba(252, 248, 7, 1)',\r\n            //orange\r\n            'rgba(252, 125, 7, 1)',\r\n            'rgba(252, 125, 7, 1)',\r\n            'rgba(252, 125, 7, 1)',\r\n            'rgba(252, 125, 7, 1)',\r\n            //red\r\n            'rgba(252, 7, 7, 1)',\r\n            'rgba(252, 7, 7, 1)',\r\n        ],\r\n        */\r\n        //borderColor: 'rgba(255, 0, 0, 1)',\r\n        label: '',\r\n      },\r\n    ],\r\n  };\r\n\r\n  /** グラフオプション */\r\n  const graphOption = {\r\n      /*\r\n    scales: {\r\n      xAxes: [\r\n        // x軸オプション\r\n        {\r\n          scaleLabel: {\r\n            // x軸ラベルオプション\r\n            display: true,\r\n            labelString: '2019年',\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        // y軸オプション\r\n        {\r\n          scaleLabel: {\r\n            // y軸ラベルオプション\r\n            display: true,\r\n            labelString: '合計降水量(mm)',\r\n          },\r\n          ticks: {\r\n            // y軸メモリオプション\r\n            beginAtZero: true,\r\n            callback: function (value, index, values) {\r\n              return `${value}(mm)`;\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    */\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        {/* グラフコンポーネントの呼び出し */}\r\n        <Bar data={graphData} options={graphOption} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Graph;","import { render } from '@testing-library/react';\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass InputForm extends Component {\r\n\r\n    input = '';\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            accountname: 'Yoika',\r\n            score: '620',\r\n        };\r\n        this.doChange = this.doChange.bind(this);\r\n        this.doSubmit = this.doSubmit.bind(this);\r\n    }\r\n\r\n    doChange(event){\r\n        this.input = event.target.value;\r\n    }\r\n\r\n    doSubmit(event) {\r\n        this.setState({\r\n            accountname: this.input,\r\n        });\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"mb-3\">\r\n                <form onSubmit={this.doSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Account Name</label>\r\n                        <input type=\"text\" className=\"form-control\" onChange={this.doChange} />\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Enter\" />\r\n                </form>\r\n                <h3 className=\"alert alert-primary mt-3\">\r\n                    <p>{this.state.accountname} 's rating is {this.state.score}.</p>\r\n                </h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputForm;","import React from 'react';\nimport './App.css';\nimport Graph from './Graph';\nimport InputForm from './InputForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"bg-primary text-white display-4\">AtCoder Heuristic Statistics</h1>\n      <div className=\"container mt-3\">\n        <h4>About</h4>\n        <h6>AtCoder Heuristic Contestのレート分布を表示します．<br />\n          ユーザ名を入力すると，分布における該当ユーザの位置にハイライトします．\n        </h6>\n        <InputForm />\n        <Graph />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}